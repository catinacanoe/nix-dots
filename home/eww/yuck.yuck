(defwidget dock_block [halign]
    (box :orientation "horizontal" :class "dock-block"
         :hexpand false :halign halign :spacing 7 :space-evenly false
        (children)
    )
)

(defwidget dock_layout []
    (box :orientation "horizontal" :class "dock-layout" :valign "center"
        (dock_left) (dock_middle) (dock_right)
    )
)

(defwidget dock_left []
    (dock_block :halign "start"
        "music stuff"
    )
)

(defvar var_switching false)
(defvar var_active 1)
(defvar var_prev 1)
(defvar var_workspaces '[{"id":"1","windows":0}]')
(defwidget dock_middle []
    (dock_block :halign "center"
        (box :class "dock-widget" :space-evenly false
            (for workspace in var_workspaces
                (box :orientation "vertical" :space-evenly false
                    (box :class "dock-workspace-pad")
                    (box :class "dock-workspaces ${var_switching ? (workspace.id == var_active ? "active switching" : ((workspace.windows > 0 ? "occupied" : "empty") + (workspace.id == var_prev ? " switching" : ""))) : (workspace.id == var_active ? "active" : (workspace.windows > 0 ? "occupied" : "empty"))}")
                    (box :class "dock-workspace-pad")
                )
            )
        )
    )
)

(defwidget dock_widget []
    (box :class "dock-widget" :valign "center"
        (children)
    )
)

(defpoll poll_net_vpn :interval "5s" `protonvpn status | grep '^Status: ' | awk '{ print $2 }' | grep -o '^.' | sed -e 's|C|v |' -e 's|D||'`)
(defpoll poll_net_name :interval "2s" `nmcli -t device wifi list --rescan no | grep '^*' | awk -F ':' '{ print $8 }' | tr '[:upper:]' '[:lower:]'`)
(defvar var_net_check "")
(defwidget dock_net []
    (dock_widget
        (label
            :text "${poll_net_vpn}${poll_net_name}${var_net_check}"
            :class "dock-net"
        )
    )
)

(defvar var_audio_device "")
(defvar var_volume "0")
(defwidget dock_volume []
    (dock_widget
        (label
            :text "${var_volume}%${var_audio_device}"
            :class "dock-volume"
        )
    )
)

(defvar var_brightness "100")
(defwidget dock_brightness []
    (dock_widget
        (label
            :text "${var_brightness}%"
            :class "dock-brightness"
        )
    )
)

(defvar var_battery "100%")
(defwidget dock_battery []
    (dock_widget
        (label
            :text var_battery
            :class "dock-battery"
        )
    )
)

(defpoll poll_time :interval "1s" `date +'%d.%m.%Y ~ %H:%M'`)
(defwidget dock_time []
    (dock_widget
        (label
            :text poll_time
            :class "dock-time"
        )
    )
)
