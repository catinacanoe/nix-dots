{ config, pkgs, ... }:
let
    color = (import ../../rice).col.bg.h;
    wppdir = "${config.xdg.cacheHome}/wpp";
in
{
    home.packages = [(pkgs.writeShellScriptBin "wpp" ''
    if [ -z "$1" ]; then
        echo "please pass an action:"
        echo "c | color : just print the current overlay color"
        echo "d | desktop : set desktop wallpaper with swww"
        echo "b | browser : set browser wallpaper (might require intensive image processing)"
        exit
    fi

    action="$1"
    target="$2"

    NIXFILE="${config.xdg.userDirs.extraConfig.XDG_REPOSITORY_DIR}/nix-dots/rice/wall/default.nix"
    INDEXFILE="${config.xdg.userDirs.pictures}/wall/index"

    DIM="${wppdir}/dim.png"
    DIMVFLIP="${wppdir}/dimvflip.png"
    DIMVFULL="${wppdir}/dimvfull.png"
    DIMHFLIP="${wppdir}/dimhflip.png"
    DIMFULL="${wppdir}/dimfull.png"

    JPEG="${wppdir}/jpeg.jpg"
    BLUR="${wppdir}/blur.jpg"
    DIMBLUR="${wppdir}/dimblur.jpg"

    wall_url=""
    blur_url=""
    dimblur_url=""

    function convertimages() {
        rm -rf "${wppdir}"
        mkdir -p "${wppdir}"

        echo "generation 1/4 overlaying ${color}"
        convert "$target" -fill '${color}' -colorize 65% -quality 100 -depth 16 "$DIM"

        echo "generation 2/4 blurring dimmed image"
        convert "$DIM" -blur 0x30 -quality 100 -depth 16 "$DIMBLUR"

        echo "generation 3/4 blurring original image"
        convert "$target" -blur 0x30 -quality 100 -depth 16 "$BLUR"

        echo "generation 4/4 compressing original image"
        if echo "$target" | grep -q ".jpg$\|.jpeg$"; then
            cp "$target" "$JPEG"
        else
            convert "$target" -quality 100 -depth 16 "$JPEG"
        fi

        echo
    }

    function uploadimage() { # image-path index-prefix
        local url="$(imgurbash2 "$1" 2>&1 | awk '{ print $1 }')"
        local hash="$(echo "$url" | sed 's|^http.*imgur.com/||')"
        echo "$2:${color}$target $hash" >> "$INDEXFILE"

        echo "$url"
    }

    function upload() {
        echo >> "$INDEXFILE"

        echo "uploading 1/3 blurred and dimmed image to imgur"
        dimblur_url="$(uploadimage "$DIMBLUR" "dim")"
        [ -z "$dimblur_url" ] && echo "failed to upload dimblurred image to imgur" && exit
        echo "$dimblur_url"
        echo

        echo "uploading 2/3 blurred image to imgur"
        blur_url="$(uploadimage "$BLUR" "blur")"
        [ -z "$blur_url" ] && echo "failed to upload blurred image to imgur" && exit
        echo "$blur_url"
        echo

        echo "uploading 3/3 original image to imgur"
        wall_url="$(uploadimage "$JPEG" "wall")"
        echo "$wall_url"
        [ -z "$wall_url" ] && echo "failed to upload original image to imgur" && exit
        echo
    }

    function geturls() {
        local urls="$(grep "${color}$target" "$INDEXFILE")"
        if [ -n "$urls" ]; then
            echo "found cached imgur links for this wallpaper"

            dimblur_url="$(echo "$urls" | grep "^dim:" | awk '{ print "https://i.imgur.com/"$2}')"
            [ -z "$dimblur_url" ] && echo "failed to find cached dimblurred image" && exit

            blur_url="$(echo "$urls" | grep "^blur:" | awk '{ print "https://i.imgur.com/"$2}')"
            [ -z "$blur_url" ] && echo "failed to find cached blurred image" && exit

            wall_url="$(echo "$urls" | grep "^wall:" | awk '{ print "https://i.imgur.com/"$2}')"
            [ -z "$wall_url" ] && echo "failed to find cached original image" && exit

            echo "$wall_url"
            echo "$blur_url"
            echo "$dimblur_url"
            echo
        else
            convertimages
            upload
        fi
    }

    function writenix() {
        echo "# $target" > "$NIXFILE"
        echo "{ # AUTOGENERATED BY WPP SCRIPT (SOURCED FROM ~/PIX/INDEX)" >> "$NIXFILE"
        echo "    url = \"$wall_url\";" >> "$NIXFILE"
        echo "    url-blur = \"$blur_url\";" >> "$NIXFILE"
        echo "    url-dim = \"$dimblur_url\";" >> "$NIXFILE"
        echo "}" >> "$NIXFILE"

        echo "wrote to nx/rice/wall/default.nix"
        echo
        cat "$NIXFILE"
    }

    case "$1" in
        c|color) echo "${color}" ;;
        d|desktop) swww img -t wipe "$target" ;;
        b|browser)
            [ ! -f "$target" ] || [ -z "$target" ] && echo "please pass a file to set" && exit

            echo "operating on $target"
            target="$(realpath "$target")"

            geturls
            writenix

            echo
            echo "regenerate home manager to apply these imgur links" ;;
    esac
    '')];
}
